{
  "fetch-projects": {
    "method": "GET",
    "url": "/api/_/projects",
    "description": "Fetch all projects for the authenticated user.",
    "handler": "dynamicQueryApiHandler",
    "database": "projects.db",
    "table": "projects",
    "protected": {
      "type": "user",
      "roles": [],
      "sql_column_match": "user_id"
    },
    "queryParams": {
      "status": {
        "type": "string",
        "description": "Filter projects by status (e.g., active, archived).",
        "required": false,
        "enum": ["active", "archived", "pending", "completed"]
      },
      "sortBy": {
        "type": "string",
        "description": "Sort projects by a specific field (e.g., name, created_at).",
        "required": false,
        "enum": ["name", "created_at", "updated_at", "status"]
      },
      "order": {
        "type": "string",
        "description": "Sort order (ASC or DESC).",
        "required": false,
        "enum": ["ASC", "DESC"],
        "default": "ASC"
      },
      "limit": {
        "type": "integer",
        "description": "Limit the number of projects returned.",
        "required": false,
        "min": 1,
        "max": 100,
        "default": 20
      },
      "page": {
        "type": "integer",
        "description": "Page number for pagination.",
        "required": false,
        "min": 1,
        "default": 1
      }
    },
    "response": {
      "fields": ["id", "name", "description", "status", "created_at", "updated_at"],
      "format": "json"
    }
  },

  "create-project": {
    "method": "POST",
    "url": "/api/_/projects",
    "description": "Create a new project for the authenticated user.",
    "handler": "dynamicCreateApiHandler",
    "database": "projects.db",
    "table": "projects",
    "protected": {
      "type": "user",
      "roles": [],
      "sql_column_match": "user_id"
    },
    "bodyParams": {
      "name": {
        "type": "string",
        "description": "Project name",
        "required": true,
        "min_length": 1,
        "max_length": 255
      },
      "description": {
        "type": "string",
        "description": "Project description",
        "required": false,
        "max_length": 1000
      },
      "status": {
        "type": "string",
        "description": "Project status",
        "required": false,
        "enum": ["active", "archived", "pending", "completed"],
        "default": "active"
      }
    },
    "validation": {
      "required_fields": ["name"],
      "unique_fields": ["name"]
    }
  },

  "update-project": {
    "method": "PUT",
    "url": "/api/_/projects",
    "description": "Update an existing project. Requires project ID in URL path.",
    "handler": "dynamicUpdateApiHandler",
    "database": "projects.db",
    "table": "projects",
    "protected": {
      "type": "user",
      "roles": [],
      "sql_column_match": "user_id"
    },
    "bodyParams": {
      "name": {
        "type": "string",
        "description": "Project name",
        "required": false,
        "min_length": 1,
        "max_length": 255
      },
      "description": {
        "type": "string",
        "description": "Project description",
        "required": false,
        "max_length": 1000
      },
      "status": {
        "type": "string",
        "description": "Project status",
        "required": false,
        "enum": ["active", "archived", "pending", "completed"]
      }
    },
    "validation": {
      "unique_fields": ["name"],
      "read_only_fields": ["id", "user_id", "created_at"]
    }
  },

  "delete-project": {
    "method": "DELETE",
    "url": "/api/_/projects",
    "description": "Delete a project. Requires project ID in URL path.",
    "handler": "dynamicDeleteApiHandler",
    "database": "projects.db",
    "table": "projects",
    "protected": {
      "type": "user",
      "roles": [],
      "sql_column_match": "user_id"
    }
  },

  "project-crud": {
    "method": "ANY",
    "url": "/api/_/projects-crud",
    "description": "Full CRUD operations for projects (GET, POST, PUT, DELETE).",
    "handler": "dynamicCRUDApiHandler",
    "database": "projects.db",
    "table": "projects",
    "protected": {
      "type": "user",
      "roles": [],
      "sql_column_match": "user_id"
    },
    "queryParams": {
      "status": {
        "type": "string",
        "description": "Filter projects by status",
        "required": false,
        "enum": ["active", "archived", "pending", "completed"]
      },
      "limit": {
        "type": "integer",
        "description": "Limit results",
        "required": false,
        "min": 1,
        "max": 100,
        "default": 20
      },
      "page": {
        "type": "integer",
        "description": "Page number",
        "required": false,
        "min": 1,
        "default": 1
      }
    },
    "bodyParams": {
      "name": {
        "type": "string",
        "description": "Project name",
        "required": true,
        "min_length": 1,
        "max_length": 255
      },
      "description": {
        "type": "string",
        "description": "Project description",
        "required": false,
        "max_length": 1000
      },
      "status": {
        "type": "string",
        "description": "Project status",
        "required": false,
        "enum": ["active", "archived", "pending", "completed"],
        "default": "active"
      }
    },
    "validation": {
      "required_fields": ["name"],
      "unique_fields": ["name"],
      "read_only_fields": ["id", "user_id", "created_at"]
    }
  }
}